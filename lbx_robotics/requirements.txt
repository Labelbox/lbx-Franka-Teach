# Main Python dependencies for lbx_robotics - to be installed with pip
# This file is used by setup_environment.sh after system and ROS 2 setup.
#
# COMPATIBILITY NOTE: This requirements file is designed to work with setuptools<65.5.0
# Some packages (empy, omegaconf, etc.) are installed separately by the setup script
# due to setuptools compatibility issues with newer versions.

# --- Core & Data Processing ---
numpy>=1.19.0,<2.0
scipy
opencv-python>=4.5.0  # For image processing
pyyaml               # For configuration files
matplotlib           # For plotting (optional, for tools/analysis)
Pillow               # Image manipulation
pyserial             # Serial communication (e.g., for some sensors)
h5py                 # For HDF5 file format (data storage)
pandas               # Data analysis and manipulation
scikit-learn         # Machine learning tools (optional)

# --- ROS 2 Build Tools ---
# Colcon and related packages - ensure latest versions to fix --editable issue
# Note: These will be installed separately by the setup script to ensure proper versions
# colcon-common-extensions>=0.3.0  # Installed separately
# colcon-core>=0.15.0              # Installed separately  
# colcon-ros>=0.4.0                # Installed separately
setuptools<65.5.0                # Required for compatibility with legacy packages
wheel>=0.37.0                    # Required for building wheels

# --- ROS 2 Related Python Packages ---
# Note: Many core ROS libraries (rclpy, etc.) are part of the ROS installation itself.
# These are Python packages often used alongside or for ROS development.
# empy==3.3.4          # Required for ROS2 Humble message generation - installed separately due to setuptools issues
transformations      # For tf_transformations Python library (replacement for tf-transformations on PyPI)
catkin_pkg           # For ROS package introspection (used by some build/dev tools)
lark                 # Parser generator, used by some ROS tools

# --- Communication & Networking ---
pyzmq                # ZeroMQ messaging library
websocket-client     # For WebSocket communication
websockets           # Another library for WebSocket servers/clients
requests             # HTTP requests
psutil               # System process and utilization information

# --- Vision & Sensors ---
# pyrealsense2       # Recommended: Install via librealsense SDK apt packages or build from source for best compatibility.
                     # If installing via pip is necessary, uncomment and test carefully.

# --- Data Recording & Visualization ---
mcap                 # MCAP file format reading/writing
mcap-ros2-support==0.5.3 # MCAP support for ROS 2 messages
blosc                # High-performance compressor (often used with mcap/h5py)
foxglove-websocket   # For Foxglove Studio integration

# --- VR / Robot Control Specific (Python Components) ---
# VR Requirements - Install these for Meta Quest/Oculus VR functionality
pure-python-adb==0.3.0.dev0  # For Meta Quest (Oculus) VR controller communication - REQUIRED for VR
# 
# Note: pure-python-adb is compatible with setuptools<65.5.0
# If installation fails, try:
# pip install --force-reinstall pure-python-adb==0.3.0.dev0
# 
# Alternative: Comment out this line if VR functionality is not needed

# oculus_reader      # If this is a pip-installable Python package for your VR setup.
                     # If it's custom code within a ROS package, it will be built by colcon.
# deoxys             # If this project has Python components that need to be pip installed.

# --- Machine Learning & AI (Optional, if used by your algorithms) ---
torch>=1.9.0
torchvision>=0.10.0
transformers>=4.20.0 # From Hugging Face
wandb                # Weights & Biases for experiment tracking
tensorboard          # For TensorFlow/PyTorch logging
# omegaconf            # For Hydra configuration management - installed separately due to dependencies
# hydra-core           # Framework for configuring complex applications - installed separately
einops               # Flexible tensor operations
diffusers            # For diffusion models
accelerate           # PyTorch Distributed Training

# --- Development & Code Quality Tools ---
pytest
pytest-asyncio
black
flake8
mypy
ipython
jupyter
watchdog             # For hot-reload functionality in some development servers

# --- Additional Async Support (Python) ---
asyncio-mqtt
aiohttp

# --- Performance Optimizations (Python, Optional) ---
# These can sometimes have OS-specific or complex build steps if not available as wheels.
# uvloop             # Faster asyncio event loop
# aiofiles           # Async file I/O
# aioserial          # Async serial communication 